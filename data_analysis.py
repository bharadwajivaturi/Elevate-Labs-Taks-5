# -*- coding: utf-8 -*-
"""data_analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19GciZIFko72Tit42v0_olsuki4UoOnfR
"""

import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('/content/Crypto.csv')
df.head()

print("Shape of the DataFrame:", df.shape)

print("Data types:\n", df.dtypes)

print("Missing values:\n", df.isnull().sum())

#Top Cryptocurrencies by Market Cap

df['marketcap'] = pd.to_numeric(df['marketcap'], errors='coerce')
top_crypto = df.groupby('name')['marketcap'].sum().sort_values(ascending=False).head(10)
plt.figure(figsize=(12, 6))
top_crypto.plot(kind='bar', color='skyblue')
plt.title('Top 10 Cryptocurrencies by Market Capitalization')
plt.ylabel('Market Cap (in billions)')
plt.xlabel('Cryptocurrency')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

#Price Distribution
plt.figure(figsize=(10,6))
sns.histplot(df['price'], bins=50, kde=True)
plt.title('Distribution of Cryptocurrency Prices')
plt.xlabel('Price (USD)')
plt.ylabel('Frequency')
plt.xscale('log')
plt.show()

#Volume vs. Market Cap Analysis
plt.figure(figsize=(10,6))
sns.scatterplot(x='marketcap', y='volume24hrs', data=df, alpha=0.6)
plt.title('24hr Trading Volume vs Market Capitalization')
plt.xlabel('Market Cap (log scale)')
plt.ylabel('24hr Volume (log scale)')
plt.xscale('log')
plt.yscale('log')
plt.show()

#Correlation Analysis
numerical_cols = ['price', 'volume24hrs', 'marketcap', 'circulatingsupply', 'maxsupply', 'totalsupply']
corr_matrix = df[numerical_cols].corr()

plt.figure(figsize=(10,8))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', center=0)
plt.title('Correlation Matrix of Cryptocurrency Metrics')
plt.show()

#Price volatility analysis
volatility = df.groupby('name')['price'].std().sort_values(ascending=False).head(10)
plt.figure(figsize=(12,6))
volatility.plot(kind='bar', color='orange')
plt.title('Top 10 Most Volatile Cryptocurrencies (by Price Standard Deviation)')
plt.ylabel('Price Standard Deviation')
plt.xlabel('Cryptocurrency')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

#Price Trend of a Specific Crypto Over Time
btc = df[df['abbr'] == 'BTC']
btc.plot(x='date_taken', y='price', title='Bitcoin Price Over Time', figsize=(10,5))
plt.ylabel('Price ($)')
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
try:
    df = pd.read_csv('/content/Crypto.csv')
except FileNotFoundError:
    print("Error: Crypto.csv not found. Please upload the file to your Colab environment.")
except Exception as e:
    print(f"An error occurred while loading the CSV: {e}")

# Data Cleaning and Preparation (from previous steps)
if 'df' in locals():
    # Convert 'marketcap' and other numeric columns to numeric, handling potential errors
    for col in ['marketcap', 'volume24hrs', 'price', 'circulatingsupply', 'maxsupply', 'totalsupply']:
        if col in df.columns:
            df[col] = df[col].astype(str).str.replace(',', '', regex=False)
            df[col] = pd.to_numeric(df[col], errors='coerce')

    # Example Analysis 1: Top 10 Cryptocurrencies by Market Cap
    # This code was adapted and corrected during the conversation
    if 'marketcap' in df.columns:
        top_crypto = df.groupby('name')['marketcap'].sum().sort_values(ascending=False).head(10)
        plt.figure(figsize=(12, 6))
        top_crypto.plot(kind='bar', color='skyblue')
        plt.title('Top 10 Cryptocurrencies by Market Capitalization')
        plt.ylabel('Market Cap')
        plt.xlabel('Cryptocurrency')
        plt.xticks(rotation=45, ha='right')
        plt.tight_layout()
        plt.show()
    else:
        print("Marketcap column not available for plotting.")

    # Example Analysis 2: Price Distribution (from previous steps)
    if 'price' in df.columns:
        plt.figure(figsize=(10,6))
        sns.histplot(df['price'], bins=50, kde=True)
        plt.title('Distribution of Cryptocurrency Prices')
        plt.xlabel('Price (USD)')
        plt.ylabel('Frequency')
        plt.xscale('log')
        plt.show()
    else:
        print("Price column not available for plotting.")

    # Example Analysis 3: Volume vs. Market Cap Analysis (from previous steps)
    if 'marketcap' in df.columns and 'volume24hrs' in df.columns:
        plt.figure(figsize=(10,6))
        sns.scatterplot(x='marketcap', y='volume24hrs', data=df, alpha=0.6)
        plt.title('24hr Trading Volume vs Market Capitalization')
        plt.xlabel('Market Cap (log scale)')
        plt.ylabel('24hr Volume (log scale)')
        plt.xscale('log')
        plt.yscale('log')
        plt.show()
    else:
        print("Marketcap or Volume24hrs columns not available for plotting.")

    # Example Analysis 4: Correlation Analysis (from previous steps)
    numerical_cols = ['price', 'volume24hrs', 'marketcap', 'circulatingsupply', 'maxsupply', 'totalsupply']
    # Filter for columns that actually exist in the dataframe
    existing_numerical_cols = [col for col in numerical_cols if col in df.columns and df[col].dtype != 'object']
    if existing_numerical_cols and len(existing_numerical_cols) > 1:
        corr_matrix = df[existing_numerical_cols].corr()
        plt.figure(figsize=(10,8))
        sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', center=0)
        plt.title('Correlation Matrix of Cryptocurrency Metrics')
        plt.show()
    else:
        print("Insufficient numerical columns for correlation analysis.")


    # Example Analysis 5: Price volatility analysis (from previous steps)
    if 'price' in df.columns:
        volatility = df.groupby('name')['price'].std().sort_values(ascending=False).head(10)
        plt.figure(figsize=(12,6))
        volatility.plot(kind='bar', color='orange')
        plt.title('Top 10 Most Volatile Cryptocurrencies (by Price Standard Deviation)')
        plt.ylabel('Price Standard Deviation')
        plt.xlabel('Cryptocurrency')
        plt.xticks(rotation=45, ha='right')
        plt.tight_layout()
        plt.show()
    else:
         print("Price column not available for volatility analysis.")

    # Example Analysis 6: Price Trend of a Specific Crypto Over Time (from previous steps)
    if 'abbr' in df.columns and 'date_taken' in df.columns and 'price' in df.columns:
        # Convert 'date_taken' to datetime objects
        df['date_taken'] = pd.to_datetime(df['date_taken'], errors='coerce')
        btc = df[df['abbr'] == 'BTC']
        # Sort by date for correct plotting
        btc = btc.sort_values('date_taken')
        if not btc.empty:
            btc.plot(x='date_taken', y='price', title='Bitcoin Price Over Time', figsize=(10,5))
            plt.ylabel('Price ($)')
            plt.show()
        else:
            print("No data found for BTC.")
    else:
        print("Required columns for time trend analysis (abbr, date_taken, price) not available.")

"""## Project Summary: Cryptocurrency Data Analysis

This project performs a basic exploratory data analysis on cryptocurrency data using Python's Pandas and Matplotlib libraries.

**Dataset:**

The analysis uses a CSV file named `Crypto.csv` with the following columns:

*   `name`: Name of the cryptocurrency
*   `abbr`: Abbreviation of the cryptocurrency
*   `crypturl`: URL on crypto.com
*   `price`: Current price
*   `volume24hrs`: 24-hour trading volume
*   `marketcap`: Market capitalization
*   `circulatingsupply`: Circulating supply of coins
*   `maxsupply`: Maximum supply of coins
*   `totalsupply`: Total supply of coins
*   `date_taken`: Date the data was recorded

**Analysis Performed:**

1.  **Data Loading and Inspection:** The code loads the data into a Pandas DataFrame and performs basic checks on its shape, data types, and missing values.
2.  **Data Cleaning:** The `marketcap` column, which contained commas and was read as an object type, was cleaned by removing commas and converting it to a numeric type. Other relevant columns were also converted to numeric.
3.  **Top Cryptocurrencies by Market Cap:** A bar plot is generated to show the top 10 cryptocurrencies based on their market capitalization.
4.  **Price Distribution:** A histogram is plotted to visualize the distribution of cryptocurrency prices, using a logarithmic scale for better visualization of skewed data.
5.  **Volume vs. Market Cap Analysis:** A scatter plot is created to explore the relationship between 24-hour trading volume and market capitalization, using logarithmic scales for both axes.
6.  **Correlation Analysis:** A heatmap is generated to visualize the correlation matrix of key numerical metrics (price, volume24hrs, marketcap, circulating supply, max supply, total supply).
7.  **Price Volatility Analysis:** A bar plot is generated to show the top 10 most volatile cryptocurrencies based on the standard deviation of their prices.
8.  **Price Trend Analysis:** The price trend of Bitcoin (BTC) over time is plotted as a line chart.

**How to Use:**

1.  Upload the `Crypto.csv` file to your Google Colab environment.
2.  Run the provided code cells in a Jupyter Notebook or Google Colab.
3.  The code will output basic data information and generate plots visualizing the analysis results.

This analysis provides initial insights into the cryptocurrency market based on the provided dataset. Further analysis could include time-series forecasting, more in-depth correlation studies, or incorporating data from other sources.
"""